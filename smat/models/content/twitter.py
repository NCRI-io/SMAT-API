# generated by datamodel-codegen:
#   filename:  sample.json
#   timestamp: 2021-02-12T19:51:16+00:00

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import BaseModel


class _Shards(BaseModel):
    total: int
    successful: int
    skipped: int
    failed: int


class Total(BaseModel):
    value: int
    relation: str


class Thumb(BaseModel):
    w: int
    h: int
    resize: str


class Medium(BaseModel):
    w: int
    h: int
    resize: str


class Large(BaseModel):
    w: int
    h: int
    resize: str


class Small(BaseModel):
    w: int
    h: int
    resize: str


class Sizes(BaseModel):
    thumb: Thumb
    medium: Medium
    large: Large
    small: Small


class MediaItem(BaseModel):
    id: int
    id_str: str
    indices: List[int]
    media_url: str
    media_url_https: str
    url: str
    display_url: str
    expanded_url: str
    type: str
    sizes: Sizes1


class ExtendedEntities(BaseModel):
    media: List[MediaItem]


class Metadata(BaseModel):
    iso_language_code: str
    result_type: str


class Thumb1(BaseModel):
    w: int
    h: int
    resize: str


class Medium1(BaseModel):
    w: int
    h: int
    resize: str


class Large1(BaseModel):
    w: int
    h: int
    resize: str


class Small1(BaseModel):
    w: int
    h: int
    resize: str


class Sizes1(BaseModel):
    thumb: Thumb1
    medium: Medium1
    large: Large1
    small: Small1


class Entities(BaseModel):
    hashtags: List
    symbols: List
    user_mentions: List
    urls: List
    media: Optional[List[MediaItem]] = None


class _Source(BaseModel):
    extended_entities: Optional[ExtendedEntities] = None
    metadata: Metadata
    in_reply_to_status_id_str: Any
    in_reply_to_status_id: Any
    created_at: str
    in_reply_to_user_id_str: Any
    is_retweet_status: bool
    source: str
    retweet_count: int
    geo: Any
    in_reply_to_screen_name: Any
    is_quote_status: bool
    screen_name: str
    id_str: str
    in_reply_to_user_id: Any
    favorite_count: int
    id: int
    place: Any
    text: str
    lang: str
    retrieved_utc: int
    user_verified: bool
    possibly_sensitive: Optional[bool] = None
    coordinates: Any
    truncated: bool
    updated_utc: int
    entities: Entities
    user_id: int
    display_text_range: List[int]
    contributors: Any


class Hit(BaseModel):
    _index: str
    _type: str
    _id: str
    _score: float
    _routing: str
    _source: _Source


class Hits(BaseModel):
    total: Total
    max_score: float
    hits: List[Hit]


class TwitterContent(BaseModel):
    created_key: str
    content_key: str
    took: int
    timed_out: bool
    _shards: _Shards
    hits: Hits
